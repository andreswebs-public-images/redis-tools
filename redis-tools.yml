---
apiVersion: v1
kind: Namespace
metadata:
  name: redis-tools

---
apiVersion: v1
  kind: ConfigMap
  metadata:
    name: redis-cli-conf
    namespace: redis-tools
  data:
    redis-cli.conf: |
      fips = no
      debug = 7
      delay = yes
      options = NO_SSLv2
      options = NO_SSLv3
      [redis-cli]
          client = yes
          accept = 127.0.0.1:6379
          connect = ${REDIS_ENDPOINT}:${REDIS_PORT}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: redis-tools
  namespace: redis-tools

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: redis-tools
  namespace: redis-tools

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: redis-tools
  namespace: redis-tools
roleRef:
  kind: Role
  name: redis-tools
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: redis-tools

---
apiVersion: v1
kind: Pod
metadata:
  name: redis-tools
  namespace: redis-tools
  labels:
    app: redis-tools
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"    
spec:
  serviceAccountName: redis-tools
  securityContext:
    runAsNonRoot: true
    supplementalGroups: [ 10001]
    fsGroup: 10001
  containers:
    - name: redis-tools
      image: andreswebs/redis-tools
      imagePullPolicy: Always
      securityContext:
        runAsUser: 1000
      stdin: true
      tty: true
      args: ["bash", "-l"]
      env:
        - name: USE_TLS
          value: "yes"
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
      volumeMounts:
        - name: conf
          mountPath: /etc/stunnel/conf.d/redis-cli.conf
          subPath: redis-cli.conf
  volumes:
    - name: conf
      emptyDir: {}
    - name: redis-cli-conf-tpl
      configMap:
        name: redis-cli-conf-tpl
        defaultMode: 0755
    - name: scripts
      configMap:
        name: scripts
        defaultMode: 0755
